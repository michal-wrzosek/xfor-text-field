{"version":3,"sources":["reactComponentLib/index.js","XforTextFieldContainer.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__makeTemplateObject","cooked","raw","defineProperty","value","templateObject_1","templateObject_2","templateObject_3","theme","getThemeValueOrDefaultWithTheme","propName","defaultValue","xfor","textField","getThemeValueOrDefault","height","fontColor","borderColor","borderErroredColor","bgColor","bgDisabledColor","bgErroredColor","fontDisabledColor","labelColor","Input","styled","input","Label","div","Wrapper","_a","isFocused","isErrored","disabled","isEmpty","isAutoFilled","XforTextField","_super","_this","apply","this","arguments","inputRef","createRef","state","__","constructor","prototype","create","__extends","componentDidMount","inputEl","current","addEventListener","e","animationName","setState","render","props","errorMessage","isTouched","label","name","_b","type","_c","onChange","onFocus","onBlur","length","createElement","ThemeProvider","ref","Component","XforTextFieldContainer","initialValue","initialIsFocused","initialIsTouched","React","useState","setValue","setIsFocused","setIsTouched","event","preventDefault","stopPropagation","target","Title","h1","SubTitle","h3","Space","spaces","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4287457.chunk.js","sourcesContent":["/* eslint-disable */\nimport { createElement, createRef, Component } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\n\nvar autoFillAnimationStartName = 'onAutoFillStart';\r\nvar autoFillAnimationStopName = 'onAutoFillStop';\r\nvar getThemeValueOrDefault = function (theme) { return function (propName, defaultValue) {\r\n    return theme && theme.xfor && theme.xfor.textField && theme.xfor.textField[propName]\r\n        ? theme.xfor.textField[propName]\r\n        : defaultValue;\r\n}; };\r\nvar theme = function (theme) {\r\n    var getThemeValueOrDefaultWithTheme = getThemeValueOrDefault(theme);\r\n    return {\r\n        height: getThemeValueOrDefaultWithTheme('height', 40),\r\n        fontColor: getThemeValueOrDefaultWithTheme('fontColor', '#000000'),\r\n        borderColor: getThemeValueOrDefaultWithTheme('borderColor', '#d8d8d8'),\r\n        borderErroredColor: getThemeValueOrDefaultWithTheme('borderErroredColor', 'red'),\r\n        bgColor: getThemeValueOrDefaultWithTheme('bgColor', '#FFFFFF'),\r\n        bgDisabledColor: getThemeValueOrDefaultWithTheme('bgDisabledColor', '#ececec'),\r\n        bgErroredColor: getThemeValueOrDefaultWithTheme('bgErroredColor', '#ffd9d9'),\r\n        fontDisabledColor: getThemeValueOrDefaultWithTheme('fontDisabledColor', '#9a9a9a'),\r\n        labelColor: getThemeValueOrDefaultWithTheme('labelColor', '#9c9c9c'),\r\n    };\r\n};\r\nvar Input = styled.input(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\"], [\"\"])));\r\nvar Label = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\"], [\"\"])));\r\nvar Wrapper = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  position: relative;\\n  height: \", \"px;\\n  box-shadow: inset 0px \", \" 0px 0px\\n    \", \";\\n  background-color: \", \";\\n\\n  \", \" {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: \", \";\\n    position: absolute;\\n    line-height: 1;\\n    pointer-events: none;\\n    font-size: \", \"rem;\\n    top: 6px;\\n    right: 6px;\\n    bottom: 6px;\\n    left: 6px;\\n    color: \", \";\\n  }\\n\\n  \", \" {\\n    display: block;\\n    position: absolute;\\n    width: 100%;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    color: \", \";\\n    background: none;\\n    border: 0;\\n    padding: 1.7rem 6px 0;\\n    margin: 0;\\n    font-size: 1.4rem;\\n    transition: all 0.3s ease-in-out;\\n    outline: none;\\n    \", \";\\n\\n    // Browser autofill hack to expose animation event for JS\\n    &:-webkit-autofill {\\n      animation-name: \", \";\\n    }\\n    &:not(:-webkit-autofill) {\\n      animation-name: \", \";\\n    }\\n    @keyframes \", \" {\\n      from {\\n        /**/\\n      }\\n      to {\\n        /**/\\n      }\\n    }\\n    @keyframes \", \" {\\n      from {\\n        /**/\\n      }\\n      to {\\n        /**/\\n      }\\n    }\\n  }\\n\"], [\"\\n  position: relative;\\n  height: \", \"px;\\n  box-shadow: inset 0px \", \" 0px 0px\\n    \", \";\\n  background-color: \",\r\n    \";\\n\\n  \", \" {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: \",\r\n    \";\\n    position: absolute;\\n    line-height: 1;\\n    pointer-events: none;\\n    font-size: \", \"rem;\\n    top: 6px;\\n    right: 6px;\\n    bottom: 6px;\\n    left: 6px;\\n    color: \", \";\\n  }\\n\\n  \", \" {\\n    display: block;\\n    position: absolute;\\n    width: 100%;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    color: \", \";\\n    background: none;\\n    border: 0;\\n    padding: 1.7rem 6px 0;\\n    margin: 0;\\n    font-size: 1.4rem;\\n    transition: all 0.3s ease-in-out;\\n    outline: none;\\n    \", \";\\n\\n    // Browser autofill hack to expose animation event for JS\\n    &:-webkit-autofill {\\n      animation-name: \", \";\\n    }\\n    &:not(:-webkit-autofill) {\\n      animation-name: \", \";\\n    }\\n    @keyframes \", \" {\\n      from {\\n        /**/\\n      }\\n      to {\\n        /**/\\n      }\\n    }\\n    @keyframes \", \" {\\n      from {\\n        /**/\\n      }\\n      to {\\n        /**/\\n      }\\n    }\\n  }\\n\"])), function (_a) {\r\n    var theme = _a.theme;\r\n    return theme.height;\r\n}, function (_a) {\r\n    var isFocused = _a.isFocused;\r\n    return (isFocused ? '-2px' : '-1px');\r\n}, function (_a) {\r\n    var isErrored = _a.isErrored, theme = _a.theme;\r\n    return (isErrored ? theme.borderErroredColor : theme.borderColor);\r\n}, function (_a) {\r\n    var isErrored = _a.isErrored, disabled = _a.disabled, theme = _a.theme;\r\n    return disabled ? theme.bgDisabledColor : isErrored ? theme.bgErroredColor : theme.bgColor;\r\n}, Label, function (_a) {\r\n    var isFocused = _a.isFocused, isEmpty = _a.isEmpty, isAutoFilled = _a.isAutoFilled;\r\n    return isFocused || !isEmpty || isAutoFilled ? 'flex-start' : 'center';\r\n}, function (_a) {\r\n    var isFocused = _a.isFocused, isEmpty = _a.isEmpty, isAutoFilled = _a.isAutoFilled;\r\n    return (isFocused || !isEmpty || isAutoFilled ? '1' : '1.4');\r\n}, function (_a) {\r\n    var theme = _a.theme;\r\n    return theme.labelColor;\r\n}, Input, function (_a) {\r\n    var theme = _a.theme;\r\n    return theme.fontColor;\r\n}, function (_a) {\r\n    var disabled = _a.disabled, theme = _a.theme;\r\n    return (disabled ? \"color: \" + theme.fontDisabledColor : '');\r\n}, autoFillAnimationStartName, autoFillAnimationStopName, autoFillAnimationStartName, autoFillAnimationStopName);\r\nvar XforTextField = /** @class */ (function (_super) {\r\n    __extends(XforTextField, _super);\r\n    function XforTextField() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.inputRef = createRef();\r\n        _this.state = {\r\n            isAutoFilled: false,\r\n        };\r\n        return _this;\r\n    }\r\n    XforTextField.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        var inputEl = this.inputRef.current;\r\n        inputEl &&\r\n            inputEl.addEventListener &&\r\n            inputEl.addEventListener('animationstart', function (e) {\r\n                switch (e.animationName) {\r\n                    case autoFillAnimationStartName:\r\n                        _this.setState({ isAutoFilled: true });\r\n                        break;\r\n                    case autoFillAnimationStopName:\r\n                        _this.setState({ isAutoFilled: false });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n    };\r\n    XforTextField.prototype.render = function () {\r\n        var _a = this.props, value = _a.value, isFocused = _a.isFocused, errorMessage = _a.errorMessage, isTouched = _a.isTouched, label = _a.label, name = _a.name, _b = _a.type, type = _b === void 0 ? 'text' : _b, _c = _a.disabled, disabled = _c === void 0 ? false : _c, onChange = _a.onChange, onFocus = _a.onFocus, onBlur = _a.onBlur;\r\n        var isAutoFilled = this.state.isAutoFilled;\r\n        var isErrored = isTouched && errorMessage.length > 0;\r\n        return (createElement(ThemeProvider, { theme: theme },\r\n            createElement(Wrapper, { isFocused: isFocused, isErrored: isErrored, isEmpty: !value.length, isAutoFilled: isAutoFilled, disabled: disabled },\r\n                createElement(Input, { ref: this.inputRef, type: type, name: name, onBlur: onBlur, onFocus: onFocus, onChange: onChange, value: value }),\r\n                createElement(Label, null, isErrored ? errorMessage : label))));\r\n    };\r\n    return XforTextField;\r\n}(Component));\r\nvar templateObject_1, templateObject_2, templateObject_3;\n\nexport default XforTextField;\n","import React from 'react';\n\nimport XforTextField, { XforTextFieldProps } from './reactComponentLib';\n\nexport interface XforTextFieldContainer {\n  value: XforTextFieldProps['value'];\n  isFocused: XforTextFieldProps['isFocused'];\n  isTouched: XforTextFieldProps['isTouched'];\n  errorMessage: XforTextFieldProps['errorMessage'];\n  label: XforTextFieldProps['label'];\n  name: XforTextFieldProps['name'];\n  type: XforTextFieldProps['type'];\n  disabled: XforTextFieldProps['disabled'];\n}\n\nconst XforTextFieldContainer: React.FC<XforTextFieldContainer> = ({\n  value: initialValue,\n  isFocused: initialIsFocused,\n  isTouched: initialIsTouched,\n  errorMessage,\n  label,\n  name,\n  type,\n  disabled,\n}) => {\n  const [value, setValue] = React.useState(initialValue);\n  const [isFocused, setIsFocused] = React.useState(initialIsFocused);\n  const [isTouched, setIsTouched] = React.useState(initialIsTouched);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setValue(event.target.value);\n    setIsTouched(true);\n  };\n\n  const onFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setIsFocused(true);\n    setIsTouched(true);\n  };\n\n  const onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setIsFocused(false);\n  };\n\n  const props = {\n    value,\n    isFocused,\n    errorMessage,\n    isTouched,\n    label,\n    name,\n    type,\n    disabled,\n    onChange,\n    onFocus,\n    onBlur,\n  };\n\n  return <XforTextField {...props} />;\n};\n\nexport default XforTextFieldContainer;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport XforTextFieldContainer from './XforTextFieldContainer';\n\nconst Wrapper = styled.div`\n  margin: 20px auto;\n  padding: 20px;\n  max-width: 400px;\n  background-color: #fff;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst SubTitle = styled.h3`\n  text-align: center;\n`;\n\nconst Space = styled.div<{ spaces?: number }>`\n  height: ${({ spaces }) => (spaces ? spaces * 20 : 20)}px;\n`;\n\nconst App = () => {\n  const props = {\n    value: '',\n    isFocused: false,\n    errorMessage: '',\n    isTouched: false,\n    label: '',\n    name: 'test_text_field',\n    type: 'text' as 'text',\n    disabled: false,\n  };\n\n  const theme = {\n    xfor: {\n      textField: {\n        height: 40, // in pixels\n        fontColor: '#089278',\n        borderColor: '#00b795',\n        borderErroredColor: '#ffbdbd',\n        bgColor: '#e9fffb',\n        bgDisabledColor: '#ececec',\n        bgErroredColor: '#ffeded',\n        fontDisabledColor: '#9a9a9a',\n        labelColor: '#9ebbb6',\n      },\n    },\n  };\n\n  return (\n    <Wrapper>\n      <Title>XFor TextField React component</Title>\n      <Space spaces={2} />\n      <SubTitle>XFor TextField styled with default theme</SubTitle>\n      <Space />\n      <XforTextFieldContainer {...props} label={'Field with empty value'} />\n      <Space />\n      <XforTextFieldContainer {...props} label=\"Field with value\" value=\"Some value\" />\n      <Space />\n      <XforTextFieldContainer\n        {...props}\n        label=\"\"\n        errorMessage=\"Some example error without value\"\n        value=\"\"\n        isTouched={true}\n      />\n      <Space />\n      <XforTextFieldContainer\n        {...props}\n        label=\"\"\n        errorMessage=\"Some example error with value\"\n        value=\"Example wrong value\"\n        isTouched={true}\n      />\n      <Space spaces={3} />\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <SubTitle>XFor TextField styled with custom theme</SubTitle>\n          <Space />\n          <XforTextFieldContainer {...props} label={'Field with empty value'} />\n          <Space />\n          <XforTextFieldContainer {...props} label=\"Field with value\" value=\"Some value\" />\n          <Space />\n          <XforTextFieldContainer\n            {...props}\n            label=\"\"\n            errorMessage=\"Some example error without value\"\n            value=\"\"\n            isTouched={true}\n          />\n          <Space />\n          <XforTextFieldContainer\n            {...props}\n            label=\"\"\n            errorMessage=\"Some example error with value\"\n            value=\"Example wrong value\"\n            isTouched={true}\n          />\n        </React.Fragment>\n      </ThemeProvider>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}